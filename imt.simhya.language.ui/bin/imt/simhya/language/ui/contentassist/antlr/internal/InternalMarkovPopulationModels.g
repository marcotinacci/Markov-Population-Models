/*
* generated by Xtext
*/
grammar InternalMarkovPopulationModels;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package imt.simhya.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package imt.simhya.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import imt.simhya.language.services.MarkovPopulationModelsGrammarAccess;

}

@parser::members {
 
 	private MarkovPopulationModelsGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MarkovPopulationModelsGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleagent
entryRuleagent 
:
{ before(grammarAccess.getAgentRule()); }
	 ruleagent
{ after(grammarAccess.getAgentRule()); } 
	 EOF 
;

// Rule agent
ruleagent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAgentAccess().getGroup()); }
(rule__Agent__Group__0)
{ after(grammarAccess.getAgentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelabel
entryRulelabel 
:
{ before(grammarAccess.getLabelRule()); }
	 rulelabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule label
rulelabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment()); }
(rule__Label__NameAssignment)
{ after(grammarAccess.getLabelAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestate
entryRulestate 
:
{ before(grammarAccess.getStateRule()); }
	 rulestate
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule state
rulestate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleaction
entryRuleaction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleaction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule action
ruleaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getGroup()); }
(rule__Action__Group__0)
{ after(grammarAccess.getActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Agent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__0__Impl
	rule__Agent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getAgentKeyword_0()); }

	'agent' 

{ after(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__1__Impl
	rule__Agent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getNameAssignment_1()); }
(rule__Agent__NameAssignment_1)
{ after(grammarAccess.getAgentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__2__Impl
	rule__Agent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__3__Impl
	rule__Agent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getActionsKeyword_3()); }

	'actions' 

{ after(grammarAccess.getAgentAccess().getActionsKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__4__Impl
	rule__Agent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAgentAccess().getActAssignment_4()); }
(rule__Agent__ActAssignment_4)
{ after(grammarAccess.getAgentAccess().getActAssignment_4()); }
)
(
{ before(grammarAccess.getAgentAccess().getActAssignment_4()); }
(rule__Agent__ActAssignment_4)*
{ after(grammarAccess.getAgentAccess().getActAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__5__Impl
	rule__Agent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAgentAccess().getSAssignment_5()); }
(rule__Agent__SAssignment_5)
{ after(grammarAccess.getAgentAccess().getSAssignment_5()); }
)
(
{ before(grammarAccess.getAgentAccess().getSAssignment_5()); }
(rule__Agent__SAssignment_5)*
{ after(grammarAccess.getAgentAccess().getSAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_0()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
(rule__State__NameAssignment_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStateAccess().getSpontaneous_actAssignment_3()); }
(rule__State__Spontaneous_actAssignment_3)
{ after(grammarAccess.getStateAccess().getSpontaneous_actAssignment_3()); }
)
(
{ before(grammarAccess.getStateAccess().getSpontaneous_actAssignment_3()); }
(rule__State__Spontaneous_actAssignment_3)*
{ after(grammarAccess.getStateAccess().getSpontaneous_actAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActRefAssignment_0()); }
(rule__Action__ActRefAssignment_0)
{ after(grammarAccess.getActionAccess().getActRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1()); }

	'-->' 

{ after(grammarAccess.getActionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getStateRefAssignment_2()); }
(rule__Action__StateRefAssignment_2)
{ after(grammarAccess.getActionAccess().getStateRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getActionAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLocalRateAssignment_4()); }
(rule__Action__LocalRateAssignment_4)
{ after(grammarAccess.getActionAccess().getLocalRateAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Agent__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__ActAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getActLabelParserRuleCall_4_0()); }
	rulelabel{ after(grammarAccess.getAgentAccess().getActLabelParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__SAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getSStateParserRuleCall_5_0()); }
	rulestate{ after(grammarAccess.getAgentAccess().getSStateParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Spontaneous_actAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSpontaneous_actActionParserRuleCall_3_0()); }
	ruleaction{ after(grammarAccess.getStateAccess().getSpontaneous_actActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActRefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActRefLabelCrossReference_0_0()); }
(
{ before(grammarAccess.getActionAccess().getActRefLabelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getActionAccess().getActRefLabelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getActionAccess().getActRefLabelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__StateRefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getStateRefStateCrossReference_2_0()); }
(
{ before(grammarAccess.getActionAccess().getStateRefStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getActionAccess().getStateRefStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getActionAccess().getStateRefStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__LocalRateAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLocalRateFLOATTerminalRuleCall_4_0()); }
	RULE_FLOAT{ after(grammarAccess.getActionAccess().getLocalRateFLOATTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INT : ('0'..'9')+;

RULE_FLOAT : ('-'? RULE_INT* ('.' RULE_INT+)?|'-'? RULE_INT+ '.'|'-'? RULE_INT+ ('.' RULE_INT*)? ('e'|'E') ('-'|'+')? RULE_INT+);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


